name: Terraform Azure Monitor Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write    # Required for OIDC login
  contents: read

env:
  TF_VERSION: "1.8.5"
  TF_WORKING_DIR: "."     # Path to your Terraform files (change if needed)

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: "Deploy Azure Monitor via Terraform"

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Step 3: Azure Login using OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
          auth-type: SERVICE_PRINCIPAL

      # Step 4: Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      # Step 5: Terraform Validate
      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      # Step 6: Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      # Step 7: Terraform Apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan
